#Things to add
#Get peoples pr to display * is throw was a pr
#Grab meet name to display what meet results are from
#Find a way to grab results for men/women shot and weight (4 time running script get correct link to the events
    #I think if I use meet page then look for mens table then shot's href and weight href then same for women it would work
#Start with exporting the results to a txt file then maybe later implement php or js to put it into a webpage(html)
#Go back and look at code to see if it could be made better? (refactor)
#If website route is gone down maybe add a list option to see other schools results or conference standings eventually


from urllib.request import urlopen
from bs4 import BeautifulSoup
#insert correct url
html = urlopen("https://www.tfrrs.org/results/70849/4360879/Big_Dawg_Invitational/Women_Weight_Throw/")
soup=BeautifulSoup(html.read());
resultsTable=soup.find("tbody")
resultsAndNames=resultsTable.find_all("tr")
namesRows = []
marksRows = []
names=[]
highestmark=[]

a=0
for i in resultsAndNames:
    if a%2==0:
        if "Wis_Stevens_Point" in resultsAndNames[a].find("a")["href"]:
            namesRows.append(resultsAndNames[a])
            b=a+1
            marksRows.append(resultsAndNames[b])
    a=a+1

a=0
for i in namesRows:
    round = namesRows[a].find(class_=True).attrs['class'][0]
    highestmark.append(namesRows[a].find("td", { "class" : round}).getText())
    names.append(namesRows[a].find("a").getText())
    a=a+1

a=0
marksFormatted=[]

for i in marksRows:
    marks=marksRows[a].findAll("li")
    b=0
    c=[]
    for i in marks:
        marks[b]=marks[b].getText().strip().strip("m")
        if marks[b]=='' :
            break
        c.append(marks[b])
        b=b+1
        print(c)
    marksFormatted.append(c)
    a=a+1

highestMarks = []
throwNumbers = []
a=0
for i in marksFormatted:
    championMark=0
    throwNumber=0
    b=0
    for i in marksFormatted[a]:
        if marksFormatted[a][b] =='FOUL':
            marksFormatted[a][b]=0
        if float(marksFormatted[a][b])>championMark:
            championMark=float(marksFormatted[a][b])
            throwNumber=b+1
        b=b+1
    highestMarks.append(championMark)
    throwNumbers.append(throwNumber)
    a=a+1


a=0
for i in names:
    print(names[a], " threw ", highestMarks[a], " on throw ", throwNumbers[a])
    a=a+1

